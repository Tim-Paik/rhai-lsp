---
source: crates/rowan/tests/upstream.rs
expression: "format!(\"{:#?}\", parse.into_syntax())"

---
RHAI@0..610
  COMMENT_LINE@0..81 "// This script calcul ..."
  WHITESPACE@81..82 "\n"
  COMMENT_LINE@82..127 "// to test the speed  ..."
  WHITESPACE@127..129 "\n\n"
  STMT@129..147
    ITEM@129..146
      EXPR@129..146
        EXPR_CONST@129..146
          KW_CONST@129..134 "const"
          WHITESPACE@134..135 " "
          IDENT@135..141 "TARGET"
          WHITESPACE@141..142 " "
          OP_ASSIGN@142..143 "="
          EXPR@143..146
            WHITESPACE@143..144 " "
            EXPR_LIT@144..146
              LIT@144..146
                LIT_INT@144..146 "28"
    PUNCT_SEMI@146..147 ";"
  WHITESPACE@147..148 "\n"
  STMT@148..165
    ITEM@148..164
      EXPR@148..164
        EXPR_CONST@148..164
          KW_CONST@148..153 "const"
          WHITESPACE@153..154 " "
          IDENT@154..160 "REPEAT"
          WHITESPACE@160..161 " "
          OP_ASSIGN@161..162 "="
          EXPR@162..164
            WHITESPACE@162..163 " "
            EXPR_LIT@163..164
              LIT@163..164
                LIT_INT@163..164 "5"
    PUNCT_SEMI@164..165 ";"
  WHITESPACE@165..167 "\n\n"
  STMT@167..254
    ITEM@167..252
      EXPR@167..252
        EXPR_FN@167..252
          KW_FN@167..169 "fn"
          WHITESPACE@169..170 " "
          IDENT@170..173 "fib"
          PARAM_LIST@173..176
            PUNCT_PAREN_START@173..174 "("
            PARAM@174..175
              IDENT@174..175 "n"
            PUNCT_PAREN_END@175..176 ")"
          EXPR_BLOCK@176..252
            WHITESPACE@176..177 " "
            PUNCT_BRACE_START@177..178 "{"
            WHITESPACE@178..183 "\n    "
            STMT@183..251
              ITEM@183..251
                EXPR@183..251
                  EXPR_IF@183..250
                    KW_IF@183..185 "if"
                    EXPR@185..192
                      EXPR_BINARY@185..192
                        EXPR@185..188
                          WHITESPACE@185..186 " "
                          EXPR_IDENT@186..188
                            IDENT@186..187 "n"
                            WHITESPACE@187..188 " "
                        OP_LT@188..189 "<"
                        EXPR@189..192
                          WHITESPACE@189..190 " "
                          EXPR_LIT@190..191
                            LIT@190..191
                              LIT_INT@190..191 "2"
                          WHITESPACE@191..192 " "
                    EXPR_BLOCK@192..209
                      PUNCT_BRACE_START@192..193 "{"
                      WHITESPACE@193..202 "\n        "
                      STMT@202..208
                        ITEM@202..208
                          EXPR@202..208
                            EXPR_IDENT@202..208
                              IDENT@202..203 "n"
                              WHITESPACE@203..208 "\n    "
                      PUNCT_BRACE_END@208..209 "}"
                    WHITESPACE@209..210 " "
                    KW_ELSE@210..214 "else"
                    WHITESPACE@214..215 " "
                    EXPR_BLOCK@215..250
                      PUNCT_BRACE_START@215..216 "{"
                      WHITESPACE@216..225 "\n        "
                      STMT@225..249
                        ITEM@225..249
                          EXPR@225..249
                            EXPR_BINARY@225..249
                              EXPR@225..234
                                EXPR_CALL@225..233
                                  EXPR@225..228
                                    EXPR_IDENT@225..228
                                      IDENT@225..228 "fib"
                                  ARG_LIST@228..233
                                    PUNCT_PAREN_START@228..229 "("
                                    EXPR@229..232
                                      EXPR_BINARY@229..232
                                        EXPR@229..230
                                          EXPR_IDENT@229..230
                                            IDENT@229..230 "n"
                                        OP_SUB@230..231 "-"
                                        EXPR@231..232
                                          EXPR_LIT@231..232
                                            LIT@231..232
                                              LIT_INT@231..232 "1"
                                    PUNCT_PAREN_END@232..233 ")"
                                WHITESPACE@233..234 " "
                              OP_ADD@234..235 "+"
                              EXPR@235..249
                                EXPR_CALL@235..244
                                  EXPR@235..239
                                    WHITESPACE@235..236 " "
                                    EXPR_IDENT@236..239
                                      IDENT@236..239 "fib"
                                  ARG_LIST@239..244
                                    PUNCT_PAREN_START@239..240 "("
                                    EXPR@240..243
                                      EXPR_BINARY@240..243
                                        EXPR@240..241
                                          EXPR_IDENT@240..241
                                            IDENT@240..241 "n"
                                        OP_SUB@241..242 "-"
                                        EXPR@242..243
                                          EXPR_LIT@242..243
                                            LIT@242..243
                                              LIT_INT@242..243 "2"
                                    PUNCT_PAREN_END@243..244 ")"
                                WHITESPACE@244..249 "\n    "
                      PUNCT_BRACE_END@249..250 "}"
                  WHITESPACE@250..251 "\n"
            PUNCT_BRACE_END@251..252 "}"
    WHITESPACE@252..254 "\n\n"
  STMT@254..306
    ITEM@254..305
      EXPR@254..305
        EXPR_CALL@254..305
          EXPR@254..259
            EXPR_IDENT@254..259
              IDENT@254..259 "print"
          ARG_LIST@259..305
            PUNCT_PAREN_START@259..260 "("
            EXPR@260..304
              EXPR_LIT@260..304
                LIT@260..304
                  LIT_STR@260..304 "`Running Fibonacci(28 ..."
            PUNCT_PAREN_END@304..305 ")"
    PUNCT_SEMI@305..306 ";"
  WHITESPACE@306..307 "\n"
  STMT@307..329
    ITEM@307..328
      EXPR@307..328
        EXPR_CALL@307..328
          EXPR@307..312
            EXPR_IDENT@307..312
              IDENT@307..312 "print"
          ARG_LIST@312..328
            PUNCT_PAREN_START@312..313 "("
            EXPR@313..327
              EXPR_LIT@313..327
                LIT@313..327
                  LIT_STR@313..327 "\"Ready... Go!\""
            PUNCT_PAREN_END@327..328 ")"
    PUNCT_SEMI@328..329 ";"
  WHITESPACE@329..331 "\n\n"
  STMT@331..342
    ITEM@331..341
      EXPR@331..341
        EXPR_LET@331..341
          KW_LET@331..334 "let"
          WHITESPACE@334..335 " "
          IDENT@335..341 "result"
    PUNCT_SEMI@341..342 ";"
  WHITESPACE@342..343 "\n"
  STMT@343..365
    ITEM@343..364
      EXPR@343..364
        EXPR_LET@343..364
          KW_LET@343..346 "let"
          WHITESPACE@346..347 " "
          IDENT@347..350 "now"
          WHITESPACE@350..351 " "
          OP_ASSIGN@351..352 "="
          EXPR@352..364
            EXPR_CALL@352..364
              EXPR@352..362
                WHITESPACE@352..353 " "
                EXPR_IDENT@353..362
                  IDENT@353..362 "timestamp"
              ARG_LIST@362..364
                PUNCT_PAREN_START@362..363 "("
                PUNCT_PAREN_END@363..364 ")"
    PUNCT_SEMI@364..365 ";"
  WHITESPACE@365..367 "\n\n"
  STMT@367..424
    ITEM@367..422
      EXPR@367..422
        EXPR_FOR@367..422
          KW_FOR@367..370 "for"
          PAT@370..372
            WHITESPACE@370..371 " "
            PAT_IDENT@371..372
              IDENT@371..372 "n"
          WHITESPACE@372..373 " "
          KW_IN@373..375 "in"
          EXPR@375..393
            EXPR_CALL@375..392
              EXPR@375..381
                WHITESPACE@375..376 " "
                EXPR_IDENT@376..381
                  IDENT@376..381 "range"
              ARG_LIST@381..392
                PUNCT_PAREN_START@381..382 "("
                EXPR@382..383
                  EXPR_LIT@382..383
                    LIT@382..383
                      LIT_INT@382..383 "0"
                PUNCT_COMMA@383..384 ","
                WHITESPACE@384..385 " "
                EXPR@385..391
                  EXPR_IDENT@385..391
                    IDENT@385..391 "REPEAT"
                PUNCT_PAREN_END@391..392 ")"
            WHITESPACE@392..393 " "
          EXPR_BLOCK@393..422
            PUNCT_BRACE_START@393..394 "{"
            WHITESPACE@394..399 "\n    "
            STMT@399..420
              ITEM@399..419
                EXPR@399..419
                  EXPR_BINARY@399..419
                    EXPR@399..406
                      EXPR_IDENT@399..406
                        IDENT@399..405 "result"
                        WHITESPACE@405..406 " "
                    OP_ASSIGN@406..407 "="
                    EXPR@407..419
                      EXPR_CALL@407..419
                        EXPR@407..411
                          WHITESPACE@407..408 " "
                          EXPR_IDENT@408..411
                            IDENT@408..411 "fib"
                        ARG_LIST@411..419
                          PUNCT_PAREN_START@411..412 "("
                          EXPR@412..418
                            EXPR_IDENT@412..418
                              IDENT@412..418 "TARGET"
                          PUNCT_PAREN_END@418..419 ")"
              PUNCT_SEMI@419..420 ";"
            WHITESPACE@420..421 "\n"
            PUNCT_BRACE_END@421..422 "}"
    WHITESPACE@422..424 "\n\n"
  STMT@424..478
    ITEM@424..477
      EXPR@424..477
        EXPR_CALL@424..477
          EXPR@424..429
            EXPR_IDENT@424..429
              IDENT@424..429 "print"
          ARG_LIST@429..477
            PUNCT_PAREN_START@429..430 "("
            EXPR@430..476
              EXPR_LIT@430..476
                LIT@430..476
                  LIT_STR@430..476 "`Finished. Run time = ..."
            PUNCT_PAREN_END@476..477 ")"
    PUNCT_SEMI@477..478 ";"
  WHITESPACE@478..480 "\n\n"
  STMT@480..529
    ITEM@480..528
      EXPR@480..528
        EXPR_CALL@480..528
          EXPR@480..485
            EXPR_IDENT@480..485
              IDENT@480..485 "print"
          ARG_LIST@485..528
            PUNCT_PAREN_START@485..486 "("
            EXPR@486..527
              EXPR_LIT@486..527
                LIT@486..527
                  LIT_STR@486..527 "`Fibonacci number #${ ..."
            PUNCT_PAREN_END@527..528 ")"
    PUNCT_SEMI@528..529 ";"
  WHITESPACE@529..531 "\n\n"
  STMT@531..610
    ITEM@531..610
      EXPR@531..610
        EXPR_IF@531..610
          KW_IF@531..533 "if"
          EXPR@533..552
            EXPR_BINARY@533..552
              EXPR@533..541
                WHITESPACE@533..534 " "
                EXPR_IDENT@534..541
                  IDENT@534..540 "result"
                  WHITESPACE@540..541 " "
              OP_NOT_EQ@541..543 "!="
              EXPR@543..552
                WHITESPACE@543..544 " "
                EXPR_LIT@544..551
                  LIT@544..551
                    LIT_INT@544..551 "317_811"
                WHITESPACE@551..552 " "
          EXPR_BLOCK@552..609
            PUNCT_BRACE_START@552..553 "{"
            WHITESPACE@553..558 "\n    "
            STMT@558..607
              ITEM@558..606
                EXPR@558..606
                  EXPR_CALL@558..606
                    EXPR@558..563
                      EXPR_IDENT@558..563
                        IDENT@558..563 "print"
                    ARG_LIST@563..606
                      PUNCT_PAREN_START@563..564 "("
                      EXPR@564..605
                        EXPR_LIT@564..605
                          LIT@564..605
                            LIT_STR@564..605 "\"The answer is WRONG! ..."
                      PUNCT_PAREN_END@605..606 ")"
              PUNCT_SEMI@606..607 ";"
            WHITESPACE@607..608 "\n"
            PUNCT_BRACE_END@608..609 "}"
          WHITESPACE@609..610 "\n"

