---
source: crates/rowan/tests/upstream.rs
expression: "format!(\"{:#?}\", parse.into_syntax())"

---
RHAI@0..141
  STMT@0..11
    ITEM@0..10
      EXPR@0..10
        EXPR_LET@0..10
          KW_LET@0..3 "let"
          WHITESPACE@3..4 " "
          IDENT@4..5 "a"
          WHITESPACE@5..6 " "
          OP_ASSIGN@6..7 "="
          EXPR@7..10
            WHITESPACE@7..8 " "
            EXPR_LIT@8..10
              LIT@8..10
                LIT_INT@8..10 "42"
    PUNCT_SEMI@10..11 ";"
  WHITESPACE@11..12 "\n"
  STMT@12..24
    ITEM@12..23
      EXPR@12..23
        EXPR_LET@12..23
          KW_LET@12..15 "let"
          WHITESPACE@15..16 " "
          IDENT@16..17 "b"
          WHITESPACE@17..18 " "
          OP_ASSIGN@18..19 "="
          EXPR@19..23
            WHITESPACE@19..20 " "
            EXPR_LIT@20..23
              LIT@20..23
                LIT_INT@20..23 "123"
    PUNCT_SEMI@23..24 ";"
  WHITESPACE@24..26 "\n\n"
  STMT@26..107
    ITEM@26..106
      EXPR@26..106
        EXPR_LET@26..106
          KW_LET@26..29 "let"
          WHITESPACE@29..30 " "
          IDENT@30..31 "x"
          WHITESPACE@31..32 " "
          OP_ASSIGN@32..33 "="
          EXPR@33..106
            EXPR_BINARY@33..106
              EXPR@33..102
                WHITESPACE@33..34 " "
                EXPR_IF@34..101
                  KW_IF@34..36 "if"
                  EXPR@36..44
                    EXPR_BINARY@36..44
                      EXPR@36..39
                        WHITESPACE@36..37 " "
                        EXPR_IDENT@37..39
                          IDENT@37..38 "a"
                          WHITESPACE@38..39 " "
                      OP_LT_EQ@39..41 "<="
                      EXPR@41..44
                        WHITESPACE@41..42 " "
                        EXPR_IDENT@42..44
                          IDENT@42..43 "b"
                          WHITESPACE@43..44 " "
                  EXPR_BLOCK@44..82
                    PUNCT_BRACE_START@44..45 "{"
                    WHITESPACE@45..54 "         "
                    COMMENT_LINE@54..70 "// if-expression"
                    WHITESPACE@70..75 "\n    "
                    STMT@75..81
                      ITEM@75..81
                        EXPR@75..81
                          EXPR_BINARY@75..81
                            EXPR@75..77
                              EXPR_IDENT@75..77
                                IDENT@75..76 "b"
                                WHITESPACE@76..77 " "
                            OP_SUB@77..78 "-"
                            EXPR@78..81
                              WHITESPACE@78..79 " "
                              EXPR_IDENT@79..81
                                IDENT@79..80 "a"
                                WHITESPACE@80..81 "\n"
                    PUNCT_BRACE_END@81..82 "}"
                  WHITESPACE@82..83 " "
                  KW_ELSE@83..87 "else"
                  WHITESPACE@87..88 " "
                  EXPR_BLOCK@88..101
                    PUNCT_BRACE_START@88..89 "{"
                    WHITESPACE@89..94 "\n    "
                    STMT@94..100
                      ITEM@94..100
                        EXPR@94..100
                          EXPR_BINARY@94..100
                            EXPR@94..96
                              EXPR_IDENT@94..96
                                IDENT@94..95 "a"
                                WHITESPACE@95..96 " "
                            OP_SUB@96..97 "-"
                            EXPR@97..100
                              WHITESPACE@97..98 " "
                              EXPR_IDENT@98..100
                                IDENT@98..99 "b"
                                WHITESPACE@99..100 "\n"
                    PUNCT_BRACE_END@100..101 "}"
                WHITESPACE@101..102 " "
              OP_MUL@102..103 "*"
              EXPR@103..106
                WHITESPACE@103..104 " "
                EXPR_LIT@104..106
                  LIT@104..106
                    LIT_INT@104..106 "10"
    PUNCT_SEMI@106..107 ";"
  WHITESPACE@107..109 "\n\n"
  STMT@109..140
    ITEM@109..139
      EXPR@109..139
        EXPR_CALL@109..139
          EXPR@109..114
            EXPR_IDENT@109..114
              IDENT@109..114 "print"
          ARG_LIST@114..139
            PUNCT_PAREN_START@114..115 "("
            EXPR@115..138
              EXPR_LIT@115..138
                LIT@115..138
                  LIT_STR@115..138 "`x should be 810: ${x}`"
            PUNCT_PAREN_END@138..139 ")"
    PUNCT_SEMI@139..140 ";"
  WHITESPACE@140..141 "\n"

