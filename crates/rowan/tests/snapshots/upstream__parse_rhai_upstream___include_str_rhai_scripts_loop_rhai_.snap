---
source: crates/rowan/tests/upstream.rs
expression: "format!(\"{:#?}\", parse.into_syntax())"

---
FILE@0..198
  COMMENT_LINE@0..70 "// This script runs a ..."
  WHITESPACE@70..72 "\n\n"
  STMT@72..83
    ITEM@72..82
      EXPR@72..82
        EXPR_LET@72..82
          KW_LET@72..75 "let"
          WHITESPACE@75..76 " "
          IDENT@76..77 "x"
          WHITESPACE@77..78 " "
          OP_ASSIGN@78..79 "="
          EXPR@79..82
            WHITESPACE@79..80 " "
            EXPR_LIT@80..82
              LIT@80..82
                LIT_INT@80..82 "10"
    PUNCT_SEMI@82..83 ";"
  WHITESPACE@83..85 "\n\n"
  COMMENT_LINE@85..117 "// simulate do..while ..."
  WHITESPACE@117..118 "\n"
  STMT@118..181
    ITEM@118..181
      EXPR@118..181
        EXPR_LOOP@118..179
          KW_LOOP@118..122 "loop"
          EXPR_BLOCK@122..179
            WHITESPACE@122..123 " "
            PUNCT_BRACE_START@123..124 "{"
            WHITESPACE@124..129 "\n    "
            STMT@129..138
              ITEM@129..137
                EXPR@129..137
                  EXPR_CALL@129..137
                    EXPR@129..134
                      EXPR_IDENT@129..134
                        IDENT@129..134 "print"
                    ARG_LIST@134..137
                      PUNCT_PAREN_START@134..135 "("
                      EXPR@135..136
                        EXPR_IDENT@135..136
                          IDENT@135..136 "x"
                      PUNCT_PAREN_END@136..137 ")"
              PUNCT_SEMI@137..138 ";"
            WHITESPACE@138..144 "\n\n    "
            STMT@144..151
              ITEM@144..150
                EXPR@144..150
                  EXPR_BINARY@144..150
                    EXPR_IDENT@144..146
                      IDENT@144..145 "x"
                      WHITESPACE@145..146 " "
                    OP_SUB_ASSIGN@146..148 "-="
                    EXPR@148..150
                      WHITESPACE@148..149 " "
                      EXPR_LIT@149..150
                        LIT@149..150
                          LIT_INT@149..150 "1"
              PUNCT_SEMI@150..151 ";"
            WHITESPACE@151..157 "\n\n    "
            STMT@157..178
              ITEM@157..178
                EXPR@157..178
                  EXPR_IF@157..178
                    KW_IF@157..159 "if"
                    EXPR@159..167
                      EXPR_BINARY@159..167
                        WHITESPACE@159..160 " "
                        EXPR_IDENT@160..162
                          IDENT@160..161 "x"
                          WHITESPACE@161..162 " "
                        OP_LT_EQ@162..164 "<="
                        EXPR@164..167
                          WHITESPACE@164..165 " "
                          EXPR_LIT@165..166
                            LIT@165..166
                              LIT_INT@165..166 "0"
                          WHITESPACE@166..167 " "
                    EXPR_BLOCK@167..177
                      PUNCT_BRACE_START@167..168 "{"
                      WHITESPACE@168..169 " "
                      STMT@169..175
                        ITEM@169..174
                          EXPR@169..174
                            EXPR_BREAK@169..174
                              KW_BREAK@169..174 "break"
                        PUNCT_SEMI@174..175 ";"
                      WHITESPACE@175..176 " "
                      PUNCT_BRACE_END@176..177 "}"
                    WHITESPACE@177..178 "\n"
            PUNCT_BRACE_END@178..179 "}"
        WHITESPACE@179..181 "\n\n"
  STMT@181..197
    ITEM@181..196
      EXPR@181..196
        EXPR_EXPORT@181..196
          KW_EXPORT@181..187 "export"
          EXPORT_TARGET@187..196
            WHITESPACE@187..188 " "
            EXPORT_IDENT@188..196
              IDENT@188..189 "x"
              WHITESPACE@189..190 " "
              KW_AS@190..192 "as"
              WHITESPACE@192..193 " "
              IDENT@193..196 "foo"
    PUNCT_SEMI@196..197 ";"
  WHITESPACE@197..198 "\n"

